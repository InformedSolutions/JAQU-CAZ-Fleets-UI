- title_and_header = 'Email address change'
- content_for(:title, title_and_header)

%main.govuk-main-wrapper#main-content{role: 'main'}
  .govuk-grid-row
    .govuk-grid-column-two-thirds
      = render 'shared/errors_summary', errors: @errors if @errors.present?

      %h1.govuk-heading-l
        = title_and_header
      %p Create a new password to sign in

      = form_for('passwords',
                 url: validate_confirm_email_primary_users_path,
                 method: :get,
                 html: {autocomplete: 'off', novalidate: 'novalidate'}) do |f|
        = hidden_field_tag(:token, @token)

        .govuk-form-group{class: @errors.present? && @errors[:password].present? ? 'govuk-form-group--error': nil}
          = f.label :password, class: 'govuk-label'
          %span.govuk-hint#password-hint=t('input_form.hints.password')

          - if @errors.present? && @errors[:password].present?
            %span.govuk-error-message{id: 'password-error'}
              %span.govuk-visually-hidden Error:
              = @errors[:password].first

          = f.password_field :password,
                              class: 'govuk-input govuk-!-width-two-thirds',
                              maxlength: 45

        .govuk-form-group{class: @errors.present? && @errors[:password_confirmation].present? ? 'govuk-form-group--error': nil}
          = f.label :password_confirmation, t('input_form.labels.password_confirmation'), class: 'govuk-label'

          - if @errors.present? && @errors[:password_confirmation].present?
            %span.govuk-error-message{id: 'password_confirmation-error'}
              %span.govuk-visually-hidden Error:
              = @errors[:password_confirmation].first

          = f.password_field :password_confirmation,
                              class: 'govuk-input govuk-!-width-two-thirds',
                              maxlength: 45

        .govuk-form-group
          = f.submit 'Sign in', class: 'govuk-button', 'data-module': 'govuk-button', id: 'sign-in'
